function StandardYieldGapPlots(FS,OS,fileroot)
% make some standard yield gap plots
%
%



% Yield Gap

yg=OS.potentialyield-OS.Yield;
yg(yg<0)=0;

ii=AreaFilter(OS.Area,OS.Area);

nsg(yg,'title',[' ' OS.cropname ' yield gap ' ],...
    'cmap','revnmstoplight',...
    'filename',[fileroot OS.cropname 'yieldgap'],...
    'units','tons/ha',...
    'logicalinclude',ii);

nsg(OS.YieldGapFraction*100,'title',[' ' OS.cropname ' yield gap fraction ' ],...
    'cmap','revnmstoplight',...
    'filename',[fileroot OS.cropname 'yieldgapfraction'],...
    'caxis',[0 100],...
    'colorbarpercent','on');


nsg((1-OS.YieldGapFraction)*100,'title',[' fraction of attainable ' OS.cropname ' yield. ' ],...
    'cmap','nmstoplight',...
    'filename',[fileroot OS.cropname 'attainableyieldfraction'],...
        'caxis',[0 100],...
    'colorbarpercent','on','resolution','-r600');

nsg(OS.Yield,'title',[' ' OS.cropname ' yield  ' ],...
    'cmap','kelp',...
    'filename',[fileroot OS.cropname 'yield'],...
    'units','tons/ha',...
    'caxis',[.99],...
    'panoplytriangles',[0 1],...
    'logicalinclude',ii);

nsg(OS.Area./fma,'title',[' ' OS.cropname ' area ' ],...
    'cmap','area2',...
    'filename',[fileroot OS.cropname 'area'],...
    'units','grid cell fraction');


